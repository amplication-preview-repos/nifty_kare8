datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ExchangeRate {
  createdAt    DateTime      @default(now())
  currencyFrom String?
  currencyTo   String?
  id           String        @id @default(cuid())
  rate         Float?
  timestamp    DateTime?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model Wallet {
  balance       Float?
  createdAt     DateTime      @default(now())
  currency      String?
  id            String        @id @default(cuid())
  ledgerEntry   LedgerEntry?  @relation(fields: [ledgerEntryId], references: [id])
  ledgerEntryId String?
  transactions  Transaction[]
  updatedAt     DateTime      @updatedAt
  user          User?         @relation(fields: [userId], references: [id])
  userId        String?
}

model Transaction {
  amount         Float?
  createdAt      DateTime      @default(now())
  currency       String?
  exchangeRate   ExchangeRate? @relation(fields: [exchangeRateId], references: [id])
  exchangeRateId String?
  id             String        @id @default(cuid())
  ledgerEntries  LedgerEntry[]
  status         String?
  timestamp      DateTime?
  updatedAt      DateTime      @updatedAt
  wallet         Wallet?       @relation(fields: [walletId], references: [id])
  walletId       String?
}

model LedgerEntry {
  amount          Float?
  createdAt       DateTime     @default(now())
  id              String       @id @default(cuid())
  ledgerAmount    Float?
  ledgerTimestamp DateTime?
  ledgerType      String?
  timestamp       DateTime?
  transaction     Transaction? @relation(fields: [transactionId], references: [id])
  transactionId   String?
  typeField       String?
  updatedAt       DateTime     @updatedAt
  wallets         Wallet[]
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
  wallets   Wallet[]
}
